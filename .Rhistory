library(tidyverse)
library(glmnet)
library(caret)
library(modelr)
library(pls)
set.seed(8160)
train = read.csv(file = "./solubility_train.csv") %>% janitor::clean_names()
test = read.csv(file = "./solubility_test.csv") %>% janitor::clean_names()
lasso.model = cv.glmnet(predictors, response,
alpha = 1, lambda = lambdas, type.measure = "mse")
# set up data into correct format for glmnet
predictors = train %>% select(fp001:surface_area2) %>% as.matrix(.)
response = train$solubility
lambdas = exp(seq(-10, 10, length = 10000))
# perform the ridge regression CV for lambda
ridge.model = cv.glmnet(predictors, response,
alpha = 0, lambda = lambdas, type.measure = "mse")
lasso.model = cv.glmnet(predictors, response,
alpha = 1, lambda = lambdas, type.measure = "mse")
best.lasso.lambda = lasso.model$lambda.1se
best.lasso.coeffs = predict(lasso.model, s = best.lasso.lambda, type = "coefficients")
# Make the predictions based off of the optimum ridge coefficients
lasso.test.predictions = as.matrix(cbind(const = 1, test.predictors)) %*% best.lasso.coeffs
mean(lasso.test.predictors)
best.ridge.lambda = ridge.model$lambda.1se
best.ridge.coeffs = predict(ridge.model, s = best.ridge.lambda, type = "coefficients")
test.predictors = test %>%
select(fp001:surface_area2)
# Make the predictions based off of the optimum ridge coefficients
ridge.test.predictions = as.matrix(cbind(const = 1, test.predictors)) %*% best.ridge.coeffs
ridge.MSE = mean((test$solubility - ridge.test.predictions)^2)
lasso.model = cv.glmnet(predictors, response,
alpha = 1, lambda = lambdas, type.measure = "mse")
best.lasso.lambda = lasso.model$lambda.1se
best.lasso.coeffs = predict(lasso.model, s = best.lasso.lambda, type = "coefficients")
# Make the predictions based off of the optimum ridge coefficients
lasso.test.predictions = as.matrix(cbind(const = 1, test.predictors)) %*% best.lasso.coeffs
lasso.MSE = mean((test$solubility - lasso.test.predictions)^2)
mean(lasso.test.predictions)
