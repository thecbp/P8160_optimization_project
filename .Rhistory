mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se )
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + perimeter_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + area_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se + fractal_dimension_se)
fit = glm(se.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + smoothness_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + compactness_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + concavity_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + concave.points_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + concave.points_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + symmetry_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + area_worst + fractal_dimension_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + smoothness_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst + concave.points_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst + symmetry_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst + fractal_dimension_worst)
fit = glm(worst.f, family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst + fractal_dimension_worst)
fit = glm(diagnosis ~ ., family = binomial(link = "logit"), data = data)
standardize = function(col) {
mean = mean(col)
stdev = sd(col)
return((col - mean)/stdev)
}
# just standardize the covariates
standardized.data = read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(radius_mean:fractal_dimension_worst) %>%
map_df(.x = ., standardize)
# add back in the response and ids
data = cbind(read.csv(file = "breast-cancer-1.csv") %>%
dplyr::select(diagnosis), standardized.data) %>%
mutate(diagnosis = ifelse(diagnosis == "M", 1, 0))
cor.matrix = cor(data)
f = formula(diagnosis ~ radius_mean + texture_mean + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + fractal_dimension_mean + symmetry_mean + radius_se + perimeter_se + symmetry_se)
mean.f = formula(diagnosis ~ radius_mean + texture_mean  + perimeter_mean + smoothness_mean + compactness_mean + concavity_mean + concave.points_mean + symmetry_mean + fractal_dimension_mean)
se.f = formula(diagnosis ~ radius_se + texture_se + smoothness_se + compactness_se + concavity_se + symmetry_se)
worst.f = formula(diagnosis ~ radius_worst + texture_worst + perimeter_worst + compactness_worst + concavity_worst + fractal_dimension_worst)
fit = glm(mean.f, family = binomial(link = "logit"), data = data)
View(fit)
